## declare events

# Choreography exchanges
e2[Shipping src=Driver tgt=Florist tgt=Customer]
e3[MonitorTemperature src=TempSensor tgt=Driver]
e4[MonitorLocation src=GPSSensor tgt=Driver]
e5[CheckDelivery src=Customer tgt= Florist tgt=Driver]
e8[Accept src=Customer tgt=Florist tgt=Driver]
e9[Reject src=Customer tgt=Florist tgt=Driver]
e10[Pay src=Customer tgt=Florist]
e11[UnloadTruck src=Driver tgt=Customer tgt=Florist]
e14[PayDriver src=Florist tgt=Driver]

# Internal processes

"PrepareCommand"  [role=Florist]
"CallShipper"  [role=Florist]
"SettleCommand"  [role=Florist]
"ReturnTruck" [role=Driver]  

## group events
Group "Drive" {e2 e3 e4}
Group "Decide" {e8 e9}
Group "ProcessToDelivery" {e10 e11}
Group "SettleOrder" {ReturnTruck e14 SettleCommand}

## link events
Drive --<> e5
Drive *--> e5

e2 *--> e3
e2 -->+ e3
e2 -->+ e4
e2 *--> e4


e5 *--> Decide
e5 --<> Decide

e8 -->+ e10
e8 *--> e10
e8 -->+ e11
e8 *--> e11

PrepareCommand -->* CallShipper
PrepareCommand *--> CallShipper

CallShipper -->* e2
CallShipper *--> e2

ReturnTruck -->* e14
ReturnTruck *--> e14

e14 -->* SettleCommand  
e14 *--> SettleCommand


## exclude events
Decide -->% Decide
e9 -->% ProcessToDelivery

#monoevents
e10 -->% e10
e11 -->% e11
ReturnTruck -->% ReturnTruck
e14 -->% e14
SettleCommand  -->% SettleCommand

## add data constraints
e3 *-[10]-> e3
e4 *-[10]-> e4

e9 *--> SettleOrder 
ProcessToDelivery *--> SettleOrder 
